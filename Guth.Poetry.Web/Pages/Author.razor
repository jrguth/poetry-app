@page "/authors/{authorName}"
@inject IPoetryDBClient Client

<MudOverlay Visible="_sortedPoems == null">
    <MudProgressCircular Color="Color.Secondary" Indeterminate="true" />
</MudOverlay>
@if(_sortedPoems != null && _sortedPoems.Any())
{
    <MudText Typo="Typo.h3" Align="Align.Center" Color="Color.Primary">@AuthorName</MudText>
    <MudGrid Justify="Justify.Center">
    @foreach(Poem poem in _sortedPoems)
    {
        <MudItem Style="height: 300px" xs="8" md="6">
            <TitleCard Poem="poem"></TitleCard>
        </MudItem>
    }
    </MudGrid>
}

@code {
    [Parameter] public string AuthorName { get; set; }
    [Inject] NavigationManager Nav { get; set; }

    private IEnumerable<Poem> _sortedPoems;

    protected override async Task OnParametersSetAsync()
    {
        _sortedPoems = (await Client.GetTitlesByAuthor(AuthorName))
            .OrderBy(poem => poem.Title);
        StateHasChanged();
    }
}
