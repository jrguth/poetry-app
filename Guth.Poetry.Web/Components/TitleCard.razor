@inject IPoetryDBClient Client
<MudCard Style="height: 100%; overflow: auto;" Class="p-1" Elevation="10">
    <MudCardHeader>
        <MudGrid Justify="Justify.FlexStart">
            <MudItem>
                <MudText
                    Typo="Typo.h5"
                    Color="Color.Dark">
                    @Poem.Title
                </MudText>
                <MudLink 
                    Typo="Typo.h6" 
                    Color="Color.Primary" 
                    Underline="Underline.Always"
                    Href="@($"/authors/{Poem.Author}")">
                    @Poem.Author
                </MudLink>
            </MudItem>
            <MudItem hidden="@IsSaved">
                <MudIconButton
                    Icon="@Icons.Material.Filled.Add" 
                    Size="Size.Large" 
                    Color="Color.Primary"
                    OnClick="InvokeOnSaveClicked">
                </MudIconButton> 
            </MudItem>
        </MudGrid>
    </MudCardHeader>
    <MudDivider Light="false"></MudDivider>
    <MudCardContent>
    @foreach(string line in @Poem.Lines)
    {
        <MudText Typo="Typo.body1">@line</MudText>
    }
    </MudCardContent>
</MudCard>

@code {
    [Parameter] public Poem Poem { get; set; }
    [Parameter] public bool IsSaved { get; set; }
    [Parameter] public EventCallback<Poem> OnSaveClicked { get; set; }

    private void InvokeOnSaveClicked() => OnSaveClicked.InvokeAsync(Poem);
}